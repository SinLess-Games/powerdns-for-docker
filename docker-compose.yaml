services:
  mysql:
    image: mysql:5.7
    container_name: mysql
    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: 128M
        reservations:
          cpus: "0.25"
          memory: 128M
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: powerdns
    logging:
      driver: loki
      options:
        loki-url: "http://192.168.1.3:3100/loki/api/v1/push"
        loki-external-labels: "container_name=pdns-mysql" # Change this to your the name of your container
        loki-retries: 2
        loki-max-backoff: 800ms
        loki-timeout: 1s
        keep-file: "true"
        mode: "non-blocking"
    volumes:
      - ./.data/mysql:/var/lib/mysql
    networks:
      - pdns_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 5s
      retries: 3

  pdns_authoritative:
    image: powerdns/pdns-auth-master:latest
    container_name: pdns_authoritative
    environment:
      DEBUG: true
      BACKEND: gmysql
      PDNS_master: yes
      PDNS_api: yes
      PDNS_api_key: ${PDNS_API_KEY}
      PDNS_webserver: yes
      PDNS_webserver_address: 0.0.0.0
      PDNS_GMYSQL_HOST: mysql
      PDNS_GMYSQL_PORT: 3306
      PDNS_GMYSQL_USER: root
      PDNS_GMYSQL_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      PDNS_GMYSQL_DBNAME: powerdns
    logging:
      driver: loki
      options:
        loki-url: "http://192.168.1.3:3100/loki/api/v1/push"
        loki-external-labels: "container_name=pdns-authoritative" # Change this to your the name of your container
        loki-retries: 2
        loki-max-backoff: 800ms
        loki-timeout: 1s
        keep-file: "true"
        mode: "non-blocking"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - pdns_network
    ports:
      - "192.168.1.3:53:53/tcp"
      - "192.168.1.3:53:53/udp"
      - "8081:8081"   # API and webserver port
    healthcheck:
      test: ["CMD", "pdns_control", "rping"]
      interval: 30s
      timeout: 10s
      retries: 3

  powerdns-admin:
    image: connectitnet/powerdns-admin:latest
    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: 128M
        reservations:
          cpus: "0.25"
          memory: 128M
    container_name: pdns_admin
    environment:
      DBBACKEND: mysql
      # API key
      PDNS_API_KEY: ${PDNS_API_KEY}
      PDNS_ADMIN_SQLA_DB_TYPE: mysql
      PDNS_ADMIN_SQLA_DB_HOST: mysql
      PDNS_ADMIN_SQLA_DB_PORT: 3306
      PDNS_ADMIN_SQLA_DB_USER: root
      PDNS_ADMIN_SQLA_DB_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      PDNS_ADMIN_SQLA_DB_NAME: powerdns
    logging:
      driver: loki
      options:
        loki-url: "http://192.168.1.3:3100/loki/api/v1/push"
        loki-external-labels: "container_name=pdns-admin" # Change this to your the name of your container
        loki-retries: 2
        loki-max-backoff: 800ms
        loki-timeout: 1s
        keep-file: "true"
        mode: "non-blocking"
    depends_on:
      pdns_authoritative:
        condition: service_healthy
    networks:
      - pdns_network
    volumes:
      - ./.data/pdns-admin/static:/opt/powerdns-admin/app/static/
      - ./.data/pdns-admin/uploads:/opt/powerdns-admin/upload/
    healthcheck:
      test: ["CMD-SHELL", "curl -fs http://127.0.0.1:8080/ || exit 1"]
      timeout: 10s
      retries: 5

  nginx:
    image: nginx:latest
    container_name: pdns_nginx
    depends_on:
      powerdns-admin:
        condition: service_healthy
    logging:
      driver: loki
      options:
        loki-url: "http://192.168.1.3:3100/loki/api/v1/push"
        loki-external-labels: "container_name=pdns-nginx" # Change this to your the name of your container
        loki-retries: 2
        loki-max-backoff: 800ms
        loki-timeout: 1s
        keep-file: "true"
        mode: "non-blocking"
    networks:
      - pdns_network
    ports:
      - "8082:8000"   # Expose Nginx on port 8082 externally (adjust as needed)
    volumes:
      - ./configs/nginx-pdns-admin.conf:/etc/nginx/nginx.conf:ro
      - ./.data/pdns-admin/static:/opt/powerdns-admin/app/static/:ro
      - ./.data/pdns-admin/uploads:/opt/powerdns-admin/upload/:ro

networks:
  pdns_network:
    driver: bridge
